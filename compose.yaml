version: "3.8"
services:
  nginx:
    container_name: nginx
    build: ./docker/nginx
    command: nginx -g "daemon off;"
    restart: always
    networks:
      - backend
      - frontend
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./src:/var/www/html:ro
    depends_on:
      - "php"
      - "mysql"

  php:
    container_name: php
    build: ./docker/php
    restart: always
    networks:
      - backend
    ports:
      - "9000:9000"
    volumes:
      - ./src:/var/www/html:ro
    working_dir: /var/www/html

  mysql:
    image: mysql:8.0.27
    container_name: mysql
    restart: always
    networks:
      - backend
    environment:
      MYSQL_ROOT_PASSWORD: 'q^1i!u6%jefw!fe'
      MYSQL_DATABASE: mydb
      MYSQL_USER: webuser
      MYSQL_PASSWORD: 'Tb5T9eRvC2qTODYMMF'
    ports:
      - "3306:3306"
    volumes:
      - ./database/mysql:/var/lib/mysql:rw

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpma
    networks:
      - backend
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      PMA_ARBITRARY: 1
    ports:
      - 8085:80
    depends_on:
      - "php"
      - "mysql"
      - "nginx"

  cardano-node:
    image: inputoutput/cardano-node:1.35.3-configs
    container_name: cardano-node
    networks:
      - backend
      - frontend
    environment:
      NETWORK:
      CARDANO_NODE_SOCKET_PATH: /ipc/node.socket
    volumes:
      - node-${NETWORK}-db:/data
      - node-ipc:/ipc
    restart: on-failure
    logging:
      driver: "json-file"
      options:
        compress: "true"
        max-file: "10"
        max-size: "50m"

  cardano-wallet:
    image: inputoutput/cardano-wallet:2022.10.6
    container_name: cardano-wallet
    networks:
      - backend
    depends_on:
      - "cardano-node"
    volumes:
      - wallet-${NETWORK}-db:/wallet-db
      - node-ipc:/ipc
    ports:
      - 8090:8090
    entrypoint: []
    command: bash -c "
        ([[ $$NETWORK == \"mainnet\" ]] && $$CMD --mainnet) ||
        ($$CMD --testnet /config/${NETWORK}/genesis-byron.json)
      "
    environment:
      CMD: "cardano-wallet serve --node-socket /ipc/node.socket --database /wallet-db --listen-address 0.0.0.0"
      NETWORK:
    restart: on-failure
    logging:
      driver: "json-file"
      options:
        compress: "true"
        max-file: "10"
        max-size: "50m"

volumes:
  mysql:
    driver: flocker
    driver_opts:
      size: "20GiB"
  node-mainnet-db:
  wallet-mainnet-db:
  node-preprod-db:
  wallet-preprod-db:
  node-preview-db:
  wallet-preview-db:
  node-ipc:
  node-config:

networks:
  backend: {}
  frontend: {}